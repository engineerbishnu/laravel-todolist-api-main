name: Deploy

on: 
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: self-hosted 

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v4

      # Step 2: Deploy Laravel Code
      - name: Deploy Laravel Code
        run: |
          cd /home/vagrant/laravel-todolist-api-main
          git pull origin main

          composer install --no-dev --optimize-autoloader

          php artisan key:generate
          sudo chmod -R 775 storage
          sudo usermod -aG vagrant www-data
          sudo chown -R www-data:www-data storage
          sudo touch storage/logs/laravel.log
          sudo chmod 664 storage/logs/laravel.log
          sudo chown www-data:www-data storage/logs/laravel.log

          # Step 3: Set up Nginx configuration
          # Copy the Nginx configuration to sites-available directory
          sudo cp /home/vagrant/laravel-todolist-api-main/docker/laravel-app /etc/nginx/sites-available/laravel-app

          # Create a symbolic link in sites-enabled to enable the site
          sudo ln -s /etc/nginx/sites-available/laravel-app /etc/nginx/sites-enabled/

          # Step 4: Test the Nginx configuration to ensure there are no syntax errors
          sudo nginx -t

          # Restart Nginx to apply the changes
          sudo systemctl restart nginx

          # Step 5: Restart PHP-FPM to ensure all PHP changes are applied
          sudo systemctl restart php8.3-fpm

          # Step 6: Add MySQL Database User and Grant Permissions
          # Create a MySQL user with the name "laravel" and password "secret"
          sudo mysql -e "CREATE USER 'laravel'@'localhost' IDENTIFIED BY 'secret';"

          # Create the "laravel" database (if it doesn't exist)
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS laravel;"

          # Grant all privileges on the "laravel" database to the "laravel" user
          sudo mysql -e "GRANT ALL PRIVILEGES ON laravel.* TO 'laravel'@'localhost';"

          # Flush the privileges to apply the changes
          sudo mysql -e "FLUSH PRIVILEGES;"
          php artisan migrate --force
          php artisan db:seed
          php artisan config:cache
